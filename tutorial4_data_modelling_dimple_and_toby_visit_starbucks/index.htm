<html>
<head><title>Cartoon Style Tutorial on Data Modelling</title>

<META Name="description" 
Content="We provide a Library of Data Models and free Databases.">
<META Name="keywords" 
Content="free access databases, access databases, access data models, data models,database designs, free databases, generic data models">

<link rel="stylesheet" href="../styles/style.css">
</head>

<body bgcolor="#FFFFFF" leftmargin="0" topmargin="0" marginwidth="0" marginheight="0"><script>#</script>

<!--  Start of Table 1 --->
<table border=0 cellpadding=0 cellspacing=0 width=100%>
<tr>
<td ROWSPANnnn=1 VALIGN=middle><img alt="Database Answers" SRC="../images/dba_400_home.jpg" width=400 height=58></td>
<td align=right ROWSPAN=2 valign=middle nowrap>
<A HREeeeF="images/father_of_all_data_models.gif" TARGET=_NEW>
<img ALT="Toby" BORDER=0 HEIGHT=100 SRC="images/toby.jpg"></A>

<img ALT="Dimple" BORDER=0 HEIGHT=100 SRC="images/dimple_r.jpg"></A>

</td>
</tr>

</table>
<!--  End of Table 1 --->

<!--  Start of Table 2 --->
<table border=0 NAME="TOP NAVBAR" width=100% cellpadding=0 cellspacing=0 backgrond="images/v3/px-blue.gif" bgcolor="#3366CC">
<tr>
	<td><a href="../index.htm"> <img name="menu_home" src="../images/v3/menu-home-active.gif" width=85 height=24 border=0 alt="Home"></a></td>
 	<td><img src="../images/v3/curve-top.gif" width=28 height=24></td>
	<td><a href="../pi_ask_a_question/index.asp"><img name="menu_question" src="../images/v3/menu-question.gif" width=109 height=24 border=0 alt="Ask a Question"></a></td>
	<td><a href="../pi_best_practice_display/index.asp"><img src="../images/v3/nav_bestpractice.gif" alt="Best Practice" border=0></a></td>
<!---	<td><a href="../careers.htm"> <img name="menu_careers" src="images/v3/menu-careers.gif" width=59 height=24 border=0 alt="Careers"></a></td> --->
	<td><a href="../pi_communities/boards.asp"><img src="../images/v3/nav_communities.gif" alt="Communities" border=0></a></td>
	<td><a href="../contact_us.htm"><img name="menu_contact" src="../images/v3/menu-contact.gif" width=76 border=0 height=24 alt="Contact us"></a></td>
	<td><a href="../data_models/index.htm"><img name="menu_models" src="../images/v3/menu-models.gif" width=83 height=24 border=0 alt="Data Models"></a></td>
<!---	<td><a href="../first_timers.htm"><img name="menu_timers" src="../images/v3/menu-timers.gif" width=82 height=24 border=0 alt="First Timers"></a></td> --->
<!---	
<td><a href="../pi_information_catalog/browse.asp"><img src="../images/nav_infocatalog.gif" alt="Information Catalog" border=0></a></td>              --->
	<td><a href="../search.htm"><img name="menu_search" src="../images/v3/menu-search.gif" width=53 height=24 border=0 alt="Search"></a></td> 
	<td width="100%"><a href="../site_map.htm"><img name="menu_map" src="../images/v3/menu-map.gif" width=62 height=24 border=0 alt="Site Map"></a></td>
</tr>
</table>
<!--  End of Table 2 --->

<!--  Start of Table 3 --->
<table NAME="GRAY NAVBAR" border=0 cellpadding=0 cellspacing=0 width=100%>
<TR>
<td wiIIIdth=80% bgcolor="#CCCCFF" align=center>

<!--  Start of Table 5 --->

	<table border=0 cellpadding=0 cellspacing=0 VALIGN=top width=100%>
	<tr>
	<td> <!-- Body Starts -->
<!--- HERE'S AN EMBEDDDED TABLE --->      
<!--  Start of Table 6 --->

	<table BORDER=0 WIDTH=100% WIiiiDTH=580 cellspacing="0" cellpadding="0">
        <tr> 
	<td width="61">&nbsp;</td> 
	<td rowspan="4" width="6"><img src="images/spacer.gif" width="6" height="1"></td> 
	<td colspan="3" width="100%" align="right" class="header1"><B>Welcome to our Beginner's Guide to Data Modelling - <FONT COLOR=red>Cartoon Style</FONT></B>
	<img src="images/spacer.gif" width="5" height="1"></td>
	<td width="3" bgcolor="#FF9900"><img src="images/px-orange.gif" width=1 height="20"></td> 
        </tr>

        <tr> 
	<td rowspan="3" valign="top" width="61">&nbsp;</td>
     	<td colspan="4" height=0 rowspan="3" valign="top">
            <table width="100%" border="0" cellspacing="0" cellpadding="0" height=0>
            <tr bgcolor="#FF9900"> 
            <td><img src="images/px-orange.gif" width="1" height=3></td>
            </tr>
            </table>

<!--  End of Table 6   --->
<!--  Start of Table 7 --->

            <table BGCOLOR=white width="100%" border=0 cellspacing="0" cellpadding="0">
            <tr>
            <td bgcolor="#FF9900"><img src="images/px-orange.gif" width="3" height="1"></td> 

	    <td align=left bgcoloUUUr="#CCCCFF" WIiiiDTH=15% wiIIIdth="90" backgroundDDD="images/px-left.guf" valign="top" bgcoloUUUr="#3399CC"> 
	    <FONT COLOR=blue FACE=Verdana SIZE=2>

<!---	<BR> --->
	<TABLE BORDER=2>

	<TR>
	<TD COLSPAN=2 VALIGN=top><FONT COLOR=blue FACE=Verdana SIZE=2><B>1) INTRODUCTION :</B>
	<BR>This is a <B>Beginner's Guide to Data Modelling - Cartoon Style</B>, following the great example set by the 
<A HREF="http://www.amazon.com/Manga-Guide-Databases-Mana-Takahashi/dp/1593271905/ref=sr_1_1?ie=UTF8&s=books&qid=1242717404&sr=1-1" TARGET=_NEW>
<B>Manga Guide to Databases</B></A>.
<BR><BR>Here's the front cover of the Manga book 
<A HREF="images/manga_book_cover_lge.jpg"><IMG ALIGN=left SRC="images/manga_book_cover_sml.jpg"></A> and the first page to show you what the cartoon approach looks like in practice (Click on each one to see a larger picture).

<A HREF="images/manga_book_page_1_lge.jpg">
<IMG ALIGN=left SRC="images/manga_book_page_1_sml.jpg">&nbsp</A>




<!---	<BR>With the help of Google's free translation service, I have produced versions of this Tutorial in 
	<A HREF="tutorial_in_portuguese.htm"><B>Portuguese</B></A>
	and <A HREF="tutorial_in_spanish.htm"><B>Spanish</B></A>.
	<BR><BR>
	Topics covered in this Tutorial include :-
	<OL><LI>Creating Entities
	<LI>Primary Keys
	<LI>Foreign Keys
	<LI>1-to-Many Relationships
	<LI>Hierarchies
	<LI>Inheritance
	<LI>Reference Data
	</OL>

	<BR>I have used the <A HREF="http://www.datanamic.com" TARGET=_NEW><FONT COLOR=red>Dezign Data Modelling Tool</FONT></A> to create the Data Models in this Tutorial.
	<BR>I chose Datanamic because it is powerful, flexible and affordable.
	<BR>Members of the Database Answers Community can purchase Dezign and <B>benefit from a discount of 25%</B>.

	<BR>In order to gain the benefit of this <B>discount</B>, all you have to do is 
	<A HREF='mailto:dba_requests&#64;barryw.org?subject=Request for Dezign at a Discount'>send me an email</A>

<BR>In order to gain the benefit of this discount, all you have to do is
<A HREF='mailto:dba_requests&#64;barryw.org?subject=Request for Dezign at a Discount'>
send me an email</A> with your Database Answers Community ID. 
<BR>I will then send you the order instructions.
--->


<!---
specify a coupon code of 'DATABASEANSWERS' when you 
<A HREF="http://www.datanamic.com/order/index.html" TARGET=_NEW>place your order</A> for <B>Dezign</B>

	<BR><BR><LI>At the end of this Tutorial, we will have produced a Data Model, which is commonly referred as an <B>Entity-Relationship Diagram</B>, or <B>'ERD'</B>
--->

<!---	<BR><BR>I hope you find this Tutorial interesting and helpful.
	Please <A HREF='mailto:databaseanswers&#64;gmail.com?subject=Comments on Tutorial on Data Modelling'>let me know</A>. --->

	<BR><BR>
	</TD>
	</TR>

	<TR>
	<TD VALIGN=top><FONT COLOR=blue FACE=Verdana SIZE=2><B>2) GETTING STARTED :</B>

<BR><BR><BR>
<img ALIiiiGN=left ALT="Dimple (Rubble)" BORDER=0 HEIGHT=100 SRC="images/dimple_r.jpg"></A>
[Dimple] : Toby, I'm hungry, what can we get here ?


<BR><BR>
<img ALIiiiGN=left ALT="Toby" BORDER=0 HEIGHT=100 SRC="images/toby.jpg"></A>
[Toby] : Lots of things, Dimple - like Coffee, Muffins and Paninis.
<BR> let's go inside and take a look ...


<!---	<BR>The area I have chosen for this Tutorial is a Data Model for a simple Order Processing System for Starbucks.
	<BR>I have done it this way because many people are familiar with Starbucks and it provides an application that is easy to relate to.


	<LI>We think about the area we are going to Model.
	<LI>We can see Customers ordering Products,(Food and Drinkg and so on).

	<LI><B>My Approach</B> has three Steps :-
	<OL><LI>Establish the Scope of the Data Model
	<LI>Identify the 'Things of Interest' that are within the Scope, 
	These will be called <B>Entities</B>.
	<LI>Determine the <B>Relationships</B> between them.
	</OL>

<BR><B>DECIDING THE SCOPE OF OUR DATA MODEL</B>
<LI>When we step inside, we see that Starbucks sells a wide range of Products, so our first task is to decide which of them should be included in our Data Model.

<LI>Right now, we are interested only in something to eat and something to drink.
<LI>Therefore, all the mugs and other items shown in this picture on the left, are outside the <B>Scope</B> of our Data Model, and are not <B>'Things of Interest'.
--->



	</TD>

	<TD>
	<IMG ALIGN=rleft ALT="One of the 270 Starbucks Coffee Shops in new York City in 2007" SRC="images/starbucks_one_of_270_in_nyc.jpg">
	<BR>
	</TD>
	</TR>


<TR>
<TD>

<!--- <IMG ALIGN=right ALT="Data Model version 1" SRC="images/data_model_version_1.gif"> --->


<BR><BR><BR>
<img ALT="Starbucks Coffee Cup" BORDER=0 HEIGHT=100 SRC="images/starbucks_coffee_cup.jpg"></A>


<img ALT="Panini" BORDER=0 HEIGHT=100 SRC="images/panini.jpg"></A>

<img ALT="Coffee and Panini Entities" ALIGN=right BORDER=0 SRC="images/1_coffee_panini_and_paper.gif"></A>

<BR>
</TD>

<TD VALIGN=top>
<FONT COLOR=blue FACE=Verdana SIZE=2>
<B>3) BASICS</B>
<BR>[Dimple] That's great - I can have my favourite Caramel Machiatto and Mozzarella Panini !!!
<BR> 
<BR>[Toby] And we can draw little boxes to start our Data Model.
</TD>
</TR>






	<TR>
	<TD VALIGN=top>
	<FONT COLOR=blue FACE=Verdana SIZE=2>
	<B>4) PLACING AN ORDER :</B>
	<BR><BR>[Dimple] : What do we do ?


	<BR><BR>[Toby] : Place an order with the Barista behind the counter.
<BR><BR> [Dimple] : Now we are Customers - hurrah !!!


	</TD>

	<TD>
	<IMG ALIGN=rleft ALT="Customers and Orders" SRC="images/2_customers_and_orders.gif">
	<BR>
	</TD>
	</TR>




<TR>
<TD VALIGN=middle><IMG ALIGN=right ALT="3 - Products" SRC="images/3_products.gif">
<BR>
</TD>

<TD VALIGN=top>
<FONT COLOR=blue FACE=Verdana SIZE=2>
<B>5) COFFEE AND PANINI ARE JUST PRODUCTS :</B>




<BR><BR>[Dimple] : So many things to choose from, I can't get my head around it !!!

<BR><BR>[Toby] : We can group things together in a way that reflects their basic structure.

<BR><BR>[Dimple] : That sounds good, Toby, but I don't know what it means.

<BR><BR>[Toby] : Well, Dimple, we can call everything a Product and then we just have different types of Products.

<BR><BR>[Dimple] : OK, Toby, but what about Customers like us and their Orders ?

</TD>
</TR>


<TR>
<TD VALIGN=top>
<FONT COLOR=blue FACE=Verdana SIZE=2>
<B>6) CUSTOMERS, PRODUCTS AND ORDERS :</B>

<BR><BR>[Dimple] : Toby, please remind me where we have got to.

<BR><BR>[Toby] : Well, Dimple, right now, we know about Customers, Orders and Products, including examples of Products, like Coffee and Panini.
<BR><BR>This picture tells us what we know.

<BR><BR>[Dimple] : But Toby, it just shows some boxes on a page. What does it all mean ?

<BR><BR>[Toby] : Well, Dimple, at this point, we can show how all these boxes are related, and that is a very big step, because it takes us to the idea of 'Relationships'.


</TD>

<TD VALIGN=top><IMG ALIGN=left ALT="Customers, Orders and Products" SRC="images/customers_orders_and_products.gif">
<BR>
</TD>

</TR>



<TR>

<TD VALIGN=middle><IMG ALIGN=right ALT="Customers, Orders, Products and Relationships" SRC="images/customers_orders_and_products_relationships.gif">
<BR>
</TD>

<TD VALIGN=top>
<FONT COLOR=blue FACE=Verdana SIZE=2>
<B>7) RELATIONSHIPS :</B>

<BR><BR>[Toby] : Dimple, I have put some lines in the picture 

<BR><BR>[Dimple] : Toby, I don't understand them,  please tell me what's going on

<BR><BR>[Toby] : The lines are called Relationships, and in English, we would say, for example :-
"Customers place Orders, and an Order can have a number of things, like Coffee and Paninini."
<BR>"Coffee and Panininis are examples of Products.

<BR>These lines are very important in Data Modelling, and we have now created our first Entity-Relationship Diagram or "ERD".

<BR>There Relationships are usually One-to-Many. 
<BR>For example, One Customer can place many Orders (of course, not at the same time).
Also one Product can appear on many Orders.


</TD>


</TR>


<TR>
<TD VALIGN=top>
<FONT COLOR=blue FACE=Verdana SIZE=2>
<B>8) HOW TO IDENTIFY MY ORDER :</B>

<BR><BR>[Dimple] : Toby, with so many Customer and Orders, how do they keep track of my Order ?

<BR><BR>[Toby] : Well, Dimple, they have a separate piece of paper for your Order and on that piece of paper, they can write down a number which is unique and special for you.


<BR><BR>[Dimple] : OK, that sounds sensible. And do they use this is a Database ?


<BR><BR>[Toby] : The Database will automatically <B>make</B> (thanks to fly acount) a new unique Identifier for your Order.



</TD>

<TD VALIGN=top><IMG ALIGN=left ALT="Customers, Orders, Products Relationships and Identifiers" SRC="images/customers_orders_products_relationships_and_identifiers.gif">
<BR>
</TD>

</TR>






<!---
<TR>
<TD VALIGN=top>
<FONT COLOR=blue FACE=Verdana SIZE=2>
<B>4B) THINKING ABOUT PRODUCTS AND HIERARCHIES :</B>
<BR><BR>[Toby] : Dimple, We start with something vague called Products.
<BR><BR>[Dimple] : OK.
<BR><BR>[Toby] : We know we have Coffee and Paninis and these are just examples of food and drink.
<BR><BR>[Dimple] : OK, Toby, please tell me how this works. What is that funny dotted line ?
<BR><BR>[Toby] : That's called Rabbit's Ears, Dimple and it means that we have Parents and Children in Products.
</TD>

<TD VALIGN=top><IMG ALIGN=left ALT="4 Product Hierarchies" SRC="images/4_product_hierarchies.gif">
<BR>
</TD>

</TR>
--->

<!---
<TR>
<TD VALIGN=top><IMG ALIGN=right ALT="Bringing It All Together" SRC="images/6_bringing_it_all_together.gif">
<BR>
</TD>

<TD VALIGN=top>
<FONT COLOR=blue FACE=Verdana SIZE=2>
<B>9) BRINGING IT ALL TOGETHER :</B>

<BR><BR>[Toby] : The lines are called Relationships, and in this case, they are One-to-Many.

<BR><BR>[Dimple] : Wow - I think I understand it now.
<BR>But can we please take a break.
<BR>Maybe we can go to the movies ???

<BR><BR>[Toby] : OK, Dimple, then we can create a Data Model for Cinemas and Movies !!!
<BR><BR> And then tomorrow, we can talk about Product Hierarchies and Inheritance.
<BR><BR>They are quite difficult but very useful things to understand.
</TD>
</TR>
--->


<!---
	<TR>
	<TD VALIGN=top>
	<FONT COLOR=blue FACE=Verdana SIZE=2>
	<B>6) INHERITANCE :</B>
	<LI>Food and Drink are specific examples of the more general Thing called a Product.
	<LI>They inherit some common attributes from the Product, and also have some of their own. 
	<LI>For example, Food can contain Nuts but Drink do not contain nuts, but both have a Product Name.
--->



<!--- OLD
<BR><BR><BR>
	<LI><B>Rabbits Ears</B>
	<LI><FONT SIZE=2>You will notice that the table called 'Product_Types_v1' has a dotted line coming out on the right-hand side and going back in again on the top-right corner.
	<LI>Data Analysts call this a Reflexive Relationship, or informally, simply 'Rabbits Ears'.
	<LI>In plain English, we would say that the Table is joined to itself and it means that a record in this Table can be related to another record in the Table.
	<LI>This approach is how we handle the situation where each Product can be in a hierarchy and related to another Product.
	<LI>For example, a Product called Panini could be in a Product Sub-Category called 'Miscelleneous Sandwiches' which could be a higher Product Category called 'Cold Food', which itself could be in a higher Product Super-Category called simply 'Food'.
	<LI>Next time you go into Starbucks, take a look at the borad behind the counter and try to decide how you design the Products area of the Database.

  
 	<LI>You should <B>pay special attention</B> to the little 'zeros' at each end of the dotted line.
	<LI>These are how we implement the fact that the 'Parent Product Type Code' is optional, because the highest level will not have a Parent.
	<LI>It's important to think through this level of detail otherwise you will get caught out somewhere down the line when real data can't be stored in your Database.
	<LI>In practice, it's smart to have a checklist of things like this to run through before you expose the first draft of your new Database design to a critical audience.
 	<LI>It's good practice even if you don't have a critical audience because otherwise your design will need to be corrected.
	<LI>This topic is discussed again in the final Slide that looks at Deliveries.
	<LI>If you find this kind of thing interesting then maybe you would be happy earning a living as a Database specialist.
	<LI>If not, then keep well away from ti, and make sure your livelihood sdoesn't depened on your abaility to produce a well-design ed Database.
	<LI>You can trust me when I say that if you don't like it, or have an aptitude for it, it quickly becomes a chore that you would hate, because it requires concentrated thought and attention for ;prolonged periods of time.
	<LI>You could think of it <B>like solving crosswords</B> eight hours a day, five days a week.

	<BR><BR><LI><B>Hierarchies in Products and Product Types</B>
	<LI>It's important to understand the difference between these two things, which is that the Product Type Hierarchy defines the Category names and levels, while the Product Hierarchy defines where specific Products fit into the Product Type Hierarchy. 
OLD --->

<!---
<BR><BR><BR>
<LI>The unusual symbol in the middle of the diagram, composed of a circle with two small lines underneath it is how Inheritance is shown using the particular Data Modelling Tool that I am using,which is called Dezign.
<LI>Inheritance is a very important topic when you are creating a Data Model.
<LI>In plain English, we would say that Inheritance occurs where a Parent-Child relationship exists between Things of Interest (or Entities).
<LI>You can ask the simple <B>'Is-a' question</B> - in this case, if we ask 'Is a Book a Product' then clearly the answer is 'Yes' so we think there is an Inheritance relationship between them.


<LI>In the example of Inheritance shown in this diagram, we can see that all Products have Names and Descriptions. Therefore, Books, Food and Drink will inherit these characteristics from the parent Product.
<LI>However, each type of Product will have specific characteristics that it does not share with other types of Products. For example, Books have ISBNs and Authors, but Food and Drink do not.
<LI>One of the important things in your Data Model is to be sure you have identified all the Inheritance relationships.
<LI>However, from many years of experince as a DBA, I should point out that relationship is often blurred in a real physical Database because it can be clumsy to implement.
<LI>I sometimes find myself showing Inheritance in a Logical Data Model which then disappears when I design the Physical Database, which is what ultimately becomes the Database.
--->

<!--- OLD
<BR><BR><BR>
<LI><B>There are three different approaches to implementing Inheritance in a Database :-</B>
<OL><LI>Implement nthe design as you see it , in other words, have a separate physical Table for each Product Entity in this diagram.
<LI>Add all attributes in the Product Super-Type to the Books, Food and Drink Sub-Types so you end up with three Tables. This is appealing because it seems a natural approach but it can be more difficulty when it comes to development.
<LI>Add all attributes from the Books, Food and Drink Sub-Types to the Product Super-Type.
<BR>This results in one large Table, where two-thirds of all Attributes are not populated in every record. 
<BR>However, software development can be easier, depending on the coding conventions that are followed. Currently, wasted space is not such an issue, so this Approach is common.
OLD --->

<!---
	</FONT>
	</TD>

	<TD VALIGN=top>
	<IMG ALIGN=rleft ALT="Products (Version 2) showing Inheritance" SRC="images/products_v2.gif">
	<BR>
	</TD>
	</TR>
--->

<!---
	<TR>
	<TD VALIGN=top>
	<FONT COLOR=blue FACE=Verdana SIZE=2>
	<B>7) REFERENCE DATA :</B>
	<UL><LI>This diagram shows Address Types, which are an example of Reference Data.
	<LI>This kind of data has the following characteristics :-
	<OL><LI> it doesn't change very much 
        <LI>it has a relatively small number of values, usually less than a few dozen and never more than a few hundred.
	<LI>Therefore we can show it with a Code as a Primary Key.
	<LI>Data in Reference Data Tables can be used to populate drop-down lists for Users to select from.
	<LI>In this way, it is used to ensure that all new data is valid.
	</OL>

	<LI><B>Standards</B>
	<UL><LI>In the Address Table, you will see a field called 'iso_country_codes'.
	<LI>iso stands for the 'International Standards Organisation'.
	<LI>Where possible, it's always good to use national or international standards.
	</OL>

</OL>


	<BR><BR><B>Customer Addresses</B>
	<LI>This is a general and flexible approach to handling Addresses in our Data Model.
	<LI>We have a separate Address Table, which allows us to have more than one Address for any Customer very easily.
	<LI>This design also has some other benefits :-
	<OL><LI>We can accomodate more than one person at the same Address.
	We need to do this because different members of a family may sign-up separately with Amazon.
	<LI>With a separate table of Addresses, we can easily use commercial software to validate our Addresses.
	To find this kind of software, simply Google for "Address Validation Software".
	I have used QAS with great success in the past.
	With this approach, we can always be sure that we have 100% good Address data in our Database.
	</OL>

	</TD>

	<TD>
	<IMG ALIGN=rleft ALT="Amazon Customers - Version 2" SRC="images/amazon_customers_v2.gif">
	<BR>
	</TD>
	</TR>
--->

<HR>

<!---
<TR>
<TD><IMG ALIGN=right ALT="Orders - Version 1" SRC="images/orders_v1.gif">
<BR>
</TD>

<TD VALIGN=top>
<FONT COLOR=blue FACE=Verdana SIZE=2>
<B>8) COMMENTS :</B>
<LI>This is a very simple (and unrealistic) Diagram.
<LI>It shows that Customers order Products,such as Latte and a Muffin
</TD>
</TR>

	<TR>
	<TD VALIGN=top>
	<FONT COLOR=blue FACE=Verdana SIZE=2>
	<B>9) COMMENTS :</B>
	<LI>This is a realistic Diagram showing the detail necessary
	to correctly model Customers, Products and Order details.
	</TD>

	<TD>
	<IMG ALIGN=rleft ALT="Orders (Version 2)" SRC="images/orders_v2.gif">
	<BR>
	</TD>
	</TR>
--->


<!---
<TR>
<TD COLSPAN=1><FONT COLOR=blue FACE=Verdana SIZE=2>
<OL>
<B><LI>What have we found in Starbucks ?</B>
<UL><LI>Customers</UL>
<UL><LI>Orders</UL>
<UL><LI>Products
<UL><LI>Food
<LI>Drink


</UL>
</OL>
</TD>
<TD VALIGN=bottom><FONT COLOR=blue FACE=Verdana SIZE=2>
<B>Now we move on to Amazon ...</B></TD>
<TR>
--->

<!---
<TR>
<TD><IMG ALIGN=right ALT="Top-Level Data Model for the Tutorial" SRC="images/top_level_tutorial_data_model.gif">
<BR>
</TD>

<TD VALIGN=top>
<FONT COLOR=blue FACE=Verdana SIZE=2>
<B>8) TOPICS IN THIS TUTORIAL :</B>

<OL>
<B>During this short Tutorial,we have covered the following Topics :-</B>
	<OL><LI>Creating Entities
	<LI>Primary Keys
	<LI>Foreign Keys
	<LI>1-to-Many Relationships
	<LI>Hierarchies
	<LI>Inheritance
	<LI>Reference Data
	</OL>
</OL>

<LI>If you would like to see other Topics included, please <A HREF='mailto:databaseanswers&#64;gmail.com?subject=Suggested Topics for the Data Modelling Tutorial'>let me know</A>. Tutorial.


</TD>
</TR>
--->




<!-- End of text to copy --->

<!-- Start of text to copy --->
<!---
<TR>
<TD VALIGN=top><IMG ALIGN=right ALT="Amazon Products - Version 1" SRC="images/amazon_products_v1.gif">
<BR>
</TD>

<TD VALIGN=top>
<FONT COLOR=blue FACE=Verdana SIZE=2>
<B>COMMENTS :</B>
<LI>Different kinds of Products, like Books, are added quite easily.
<LI>We simply add different kinds of Products, and I have shown Books as an example.
<LI>You will see that the attibutes for Books are specific to Books and don't apply to Food or Drink.
<LI>For example, an Author and an ISBN. 


<BR><BR><BR>
<LI><B>Inheritance</B>
<LI>The unusual symbol in the middle of the diagram, composed of a circle with two small lines underneath it is how Inheritance is shown using the particular Data Modelling Tool that I am using,which is called Dezign.
<LI>Inheritance is a very important topic when you are creating a Data Model.
<LI>In plain English, we would say that Inheritance occurs where a Parent-Child relationship exists between Things of Interest (or Entities).
<LI>You can ask the simple <B>'Is-a' question</B> - in this case, if we ask 'Is a Book a Product' then clearly the answer is 'Yes' so we think there is an Inheritance relationship between them.


<LI>In the example of Inheritance shown in this diagram, we can see that all Products have Names and Descriptions. Therefore, Books, Food and Drink will inherit these characteristics from the parent Product.
<LI>However, each type of Product will have specific characteristics that it does not share with other types of Products. For example, Books have ISBNs and Authors, but Food and Drink do not.
<LI>One of the important things in your Data Model design is to be sure you have identified all the Inheritance relationships.
<LI>However, from many years of experience as a DBA, I should point out that Inheritance is often blurred in a real physical Database because it can be clumsy to implement.
<LI>I sometimes find myself showing Inheritance in a Logical Data Model which then disappears when I design the Physical Database, which is what ultimately becomes the Database.


<BR><BR><BR>
<LI><B>There are three different approaches to implementing Inheritance in a Database :-</B>
<OL><LI>Implement nthe design as you see it , in other words, have a separate physical Table for each Product Entity in this diagram.
<LI>Add all attributes in the Product Super-Type to the Books, Food and Drink Sub-Types so you end up with three Tables. This is appealing because it seems a natural approach but it can be more difficulty when it comes to development.
<LI>Add all attributes from the Books, Food and Drink Sub-Types to the Product Super-Type.
<BR>This results in one large Table, where two-thirds of all Attributes are not populated in every record. 
<BR>However, software development can be easier, depending on the coding conventions that are followed. Currently, wasted space is not such an issue, so this Approach is common.
</TD>
</TR>
--->



<!---	<TR>
	<TD VALIGN=top>
	<FONT COLOR=blue FACE=Verdana SIZE=2>
	<B>COMMENTS :</B>
	<LI>Although Deliveries are complex in the real world, it is easy to add them to our Database design.
	<LI>We simply add a Reference Data Table of Delivery Status Codes and one Table for tracking Order Deliveries.
	<LI>You will notice that the name of this Table is 'Customer_Orders_Delivery', which follows our convention of combining the names of Tables that are combined in the data that is stored in the Table.
 
	<LI><B>Rabbits Ears</B>
	<LI><FONT SIZE=2>You will notice that the table called 'Ref_Delivery_Stage_Codes' has a dotted line coming out on the right-hand side and going back in again on the top-right corner.
	<LI>Data Analysts call this a Reflexive Relationship, or informally, simply 'Rabbits Ears'.
	<LI>In plain English, we would say that the Table is joined to itself and it means that a record in this Table can be related to another record in the Table.
	<LI>This approach is how we handle the situation where each Delivery Stage is related to another one.
	<LI>When you buy a product from Amazon, you can track its progress as it leaves the Warehouse, clears Customs and is finally delivered to you.
 	<LI>You should <B>pay special attention</B> to the little 'zeros' at each end of the dotted line.
	<LI>These are how we implement the fact that the 'Next Delivery Stage Code' is optional, because the last Stage in Delivery will not have a Next one.
	<LI>It's important to think through this level of detail otherwise you will get caught out somewhere down the line when real data can't be stored in your Database.
	<LI>In practice, it's smart to have a checklist of things like this to run through before you expose the first draft of your new Database design to a critical audience.
 	<LI>It's good practice even if you don't have a critical audience because otherwise your design will need to be corrected.
	</FONT>


	</TD>

	<TD>
	<IMG ALIGN=rleft ALT="Amazon Deliveries - Version 1" SRC="images/amazon_deliveries_v1.gif">
	<BR>
	</TD>
	</TR>
--->

<!-- End of text to copy --->

<TR>
<TD COLSPAN=2><FONT COLOR=blue FACE=Verdana SIZE=2>

<!---
<B>Finally, here's a  Summary of the  Rules for designing a Database</B>
<OL>
<LI>Define the <B>Scope</B> of your Database.
<LI>Define the <B>"Things of Interest"</B>,(e.g. <B>Customers</B> and <B>Order</B>), that are within Scope.
<LI>Establish how these Things are related and write down the 'Business Rules'.
<BR>For example, "A <B>Customer</B> can have zero, one or many <B>Addresses</B>.
<LI>Determine what else you know about these Things. 
<BR>For example, "Books have an ISBN and one or many <B>Authors</B>
<LI>Identify the Reference Data, such as <B>Address Types</B> and <B>Product Types</B>.
</OL>

<BR><LI>You need to define a Primary Key for all Tables. 
<LI>For Reference Tables, use the'Code' as the Key, often with only one other field, which is the Description field.
<LI>For all other Data, you can use a generated number as the Primary Key.
<BR>This has some major benefits, for example, it provides flexibility, and it's really the only choice for a Database supporting a Web Site.


<BR><BR><B><LI>How to Validate your Database Design</B>
<BR>It's always useful to validate your design.
<BR>One good way is to talk through it with someone who knopw a littlw about what you are doing, or about Amazon or Stabuckls !!
<BR>Another good way is to check that you will be able to store actual data in your new Database.
<LI>Firstly, obtain a small set of Sample Data by thinking about your last trip to Starbucks, or the last book you bought from Amazon.
<LI>Confirm the first draft of the Database design against the Sample Data.
<LI>Obtain from the users some representative enquiries for the Database, 
<BR>e.g. "How many Hot Drinks are on offer in Starbucks ?"

<LI>Review Code or Type Data which is (more or less) constant, which can be classified as <B>Reference Data</B>.
<BR>Look for external standards which can be national or international.
<BR>For example, Currency or Country Codes might have ISO Codes. 

<LI>Finally, define User Scenarios and step through them with some sample data to check that that Database supports the required functionality.

</OL>
</UL>
--->

<BR><B><LI>9) PLEASE EMAIL ME</B>
<LI>I hope you have found this Tutorial fun and useful.

<LI>I would be very pleased if you could 
<A HREF='mailto:databaseanswers&#64;gmail.com?subject=Comments on Cartoon-style Data Modelling Tutorial'>email me</A> with your questions or suggestions.

<IMG ALT="Barry's Photo" SRC="images/barryw_xsml.jpg">

<OL>
<B>We have covered the following <B>Topics</B> :-</B>
	<OL>
	<LI>Identifiers
	<LI>One-to-Many Relationships
	<LI>Many-to-Many Relationships
	</OL>
</OL>

<OL>
<B>In the next one, we will cover :-</B>
	<OL>
	<LI>Primary Keys
	<LI>Foreign Keys
	<LI>Hierarchies
	<LI>Inheritance
	<LI>Reference Data
	</OL>
</OL>









<!---
<BR><BR><LI>If you want to try the <B>Dezign Data Modelling Tool</B>, you can download it from the <A HREF="http://www.datanamic.com" TARGET=_NEW><FONT COLOR=red>Datanamic Web Site</FONT></A>.

<BR><BR>Good luck with creating your first Data Model !
--->

<BR><BR><B>Barry Williams</B>
<BR>Principal Consultant
<BR>Database Answers Ltd.
<BR>London, England

</OL>

<FONT COLOR=black FACE="Verdana" SIZE=1>

<BR><CENTER><FONT COLOR=blue><I> &#169 Database Answers Ltd. 2013</I></FONT></CENTER>


</TD>

<TR>

</TABLE>






          </td>
        </tr>
      </table>

<!--  End of Table ?? --->

<BR> 

<!--- <HR> --->







<!--- barry extract ends here --->

<BR>


	<!-- Sample Section Ends -->
	<!-- Body Ends -->	
	</td>
	</tr>
	</table>
	</td>
	</tr>
</table>

<!--  Start of Table 10 --->

<table border=0 NAME="TOP NAVBAR" width=100% cellpadding=0 cellspacing=0 backgrond="../images/v3/px-blue.gif" bgcolor="#3366CC">
<tr>
<!---	<td><img src="images/v3/spacer.gif" width=5 height=24>AAAA</td> --->

	<td><a href="../index.htm"> <img name="menu_home" src="../images/v3/menu-home-active.gif" width=85 height=24 border=0 alt="Home"></a></td>
 	<td><img src="../images/v3/curve-bottom.gif" width=28 height=24></td>
	<td><a href="../pi_ask_a_question/index.asp"><img name="menu_question" src="../images/v3/menu-question.gif" width=109 height=24 border=0 alt="Ask a Question"></a></td>
	<td><a href="../pi_best_practice_display/index.asp"><img src="../images/v3/nav_bestpractice.gif" alt="Best Practice" border=0></a></td>
<!---	<td><a href="../careers.htm"> <img name="menu_careers" src="images/v3/menu-careers.gif" width=59 height=24 border=0 alt="Careers"></a></td> --->
	<td><a href="../pi_communities/boards.asp"><img src="../images/v3/nav_communities.gif" alt="Communities" border=0></a></td>
	<td><a href="../contact_us.htm"><img name="menu_contact" src="../images/v3/menu-contact.gif" width=76 border=0 height=24 alt="Contact us"></a></td>
	<td><a href="../data_models/index.htm"><img name="menu_models" src="../images/v3/menu-models.gif" width=83 height=24 border=0 alt="Data Models"></a></td>
<!---	<td><a href="../first_timers.htm"><img name="menu_timers" src="images/v3/menu-timers.gif" width=82 height=24 border=0 alt="First Timers"></a></td> --->
<!---	<td><a href="../pi_information_catalog/browse.asp"><img src="images/nav_infocatalog.gif" alt="Information Catalog" border=0></a></td>              --->
	<td><a href="../search.htm"><img name="menu_search" src="../images/v3/menu-search.gif" width=53 height=24 border=0 alt="Search"></a></td>
	<td width="100%"><a href="../site_map.htm"><img name="menu_map" src="../images/v3/menu-map.gif" width=62 height=24 border=0 alt="Site Map"></a></td>
</tr>
</table>

<!--  End of Table 10 --->

</body>
</html>

